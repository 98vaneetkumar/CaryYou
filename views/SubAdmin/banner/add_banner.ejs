<!-- Main Content -->
<div class="main-content">
  <div class="form-group col-12">
    <section class="section">
      <div class="section-header">
        <h1> Add Banner</h1>
        <div class="section-header-breadcrumb">
          <div class="breadcrumb-item active"><a href="/subAdmin/dashboard">Dashboard</a></div>
          <div class="breadcrumb-item">Add Banner</div>
        </div>
      </div>
      <div class="card">
        <div class="card-body">
          <form action="/subAdmin/addBanner" id="addForm" enctype="multipart/form-data" method="post">
            <div class="row mt-sm-4 justify-content-center">
              <div class="col-12 col-md-12 col-lg-4">
                <div class="card profile-widget bg-white">
                  <div class="profile-widget-header text-center py-3">
                    <img alt="image" width="200" height="200" id="blah" src="/assets/img/defaultimage.jpg"
                      class="profile_img rounded-circle border">
                    <input type="file" required name="image" title="" value="" onchange="previewImage(event)" id="imgInp"
                      accept=""
                      style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; opacity: 0; cursor: pointer;">
                  </div>
                
                </div>
              </div>
              <div class="col-12 col-md-12 col-lg-10 offset-lg-0 ">
                <div class="card-body p-0">


                  <div class="text-right mt-4">
                    <button type="submit" class="btn btn-info">
                      Submit
                    </button>
                  </div>
                </div>


              </div>
            </div>
          </form>
        </div>
      </div>
    </section>
  </div>
</div>




<style>
  .error {
    color: red !important;
  }
</style>
<script>
  function previewImage(event) {
    const reader = new FileReader();
    reader.onload = function () {
      const imgElement = document.getElementById('blah');
      imgElement.src = reader.result;
    }
    reader.readAsDataURL(event.target.files[0]);
  }
</script>
<script>
  $(document).ready(function () {

    jQuery.validator.addMethod("noSpace", function (value, element) {
      return value == '' || value.trim().length != 0;
    },

      jQuery.validator.addMethod("emailExt", function (value, element, param) {
        return value.match(/^[a-zA-Z0-9_\.%\+\-]+@[a-zA-Z0-9\.\-]+\.[a-zA-Z]{2,}$/);
      }, 'Your e-mail is wrong'),


      $('form[id="addForm"]').validate({


        keypress: function (element) {

          var element_id = $(element).attr('id');
          if (this.settings.rules[element_id].keypress !== false) {
            $(element).valid();
          }
        },

        rules: {

          // imgInp: {
          //   required: true,
            // noSpace: true,
            // maxlength: 20
          // },
          image: {
            required: true,
            // noSpace: true,
            // maxlength: 15
          },
          estmdtime: {
            required: true,
            noSpace: true,
            maxlength: 10
          },
          expdate: {
            required: true,
            noSpace: true,
            maxlength: 15
          },
          description: {
            required: true,
            noSpace: true,
            maxlength: 40
          },
          address: {
            required: true,
            noSpace: true,
            maxlength: 30
          },
          price: {
            required: true,
            noSpace: true,
            maxlength: 10
          },
        },
        messages: {

          title: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Title should be 20 charcater"
          },
          jobtype: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Job type should be 15 charcater"
          },
          estmdtime: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: " Estimated time should be 15 charcater"
          },
          expdate: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Date should be 15 charcater"
          },
          address: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Address should be 20 charcater"
          },
          description: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Description should be 50 charcater"
          },
          price: {
            required: "This field is required.",
            noSpace: "Space not allowed",
            maxlength: "Price should be 10 charcater"
          },

        },
        submitHandler: function (form) {
          form.submit();
        }
      }));
  });
</script>