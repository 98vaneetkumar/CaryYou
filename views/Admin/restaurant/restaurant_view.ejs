<div class="main-content">
  <section class="section">
    <div class="section-header">
      <div class="d-flex justify-content-between align-items-center w-100">
        <h1>Restaurant Dashboard</h1>
        <div class="filter-options">
          <select id="filter" class="form-control">
            <option value="all">All</option>
            <option value="today">Today</option>
            <option value="weekly">This Week</option>
            <option value="monthly">This Month</option>
            <option value="3months">Last 3 Months</option>
            <option value="6months">Last 6 Months</option>
            <option value="1year">Last 1 Year</option>
            <option value="5years">Last 5 Years</option>
          </select>
        </div>
      </div>
    </div>
    <div class="section-header">
      <h1><%=viewuser.name%></h1>
      <div class="section-header-breadcrumb">
        <div class="breadcrumb-item active">
          <a href="/admin/dashboard">Dashboard</a>
        </div>
        <div class="breadcrumb-item">Restaurant</div>
      </div>
    </div>
    <div class="mb-3">
      <a href="/admin/restaurant_list" class="btn btn-dark">
        <i class="fas fa-arrow-left"></i> Back
      </a>
    </div>
    <div class="row">
      <div id="loader" class="setting-gear-loader" style="display: none">
        <div class="gear"></div>
      </div>
      <div id="restaurant_id" data-value="<%= viewuser._id %>" hidden></div>
      <!-- Orders Card -->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-left">
        <a href="/admin/restaurant_order_list/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #33cc33, #66ff66)"
          >
            <div class="card-icon" style="background: rgba(44, 176, 44, 0.8)">
              <i class="fas fa-box"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold"><b>Orders</b></h4>
              </div>
              <div
                class="card-body"
                id="orders"
                value="<%= orders %>"
                style="color: white; font-weight: bold"
              >
                <%= orders %>
              </div>
            </div>
          </div>
        </a>
      </div>
      <!-- Pending order -->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-left">
        <a href="/admin/restaurant_pending_order_list/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #ffcc00, #ff6f00)"
          >
            <div class="card-icon" style="background: rgba(255, 153, 0, 0.8)">
              <i class="fas fa-clock"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold">
                  <b>Pending Orders</b>
                </h4>
              </div>
              <div
                class="card-body"
                id="pendingOrders"
                value="<%= pendingOrders %>"
                style="color: white; font-weight: bold"
              >
                <%= pendingOrders %>
              </div>
            </div>
          </div>
        </a>
      </div>
      <!-- Active Order-->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-right">
        <a href="/admin/restaurant_active_order_list/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #ffc300, #ffd966)"
          >
            <div class="card-icon" style="background: rgba(204, 153, 51, 0.8)">
              <i class="fas fa-shopping-cart"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold">Active Orders</h4>
              </div>
              <div
                class="card-body"
                id="activeOrders"
                value="<%= activeOrders %>"
                style="color: white; font-weight: bold"
              >
                <%= activeOrders %>
              </div>
            </div>
          </div>
        </a>
      </div>
      <!-- delivered Orders -->

      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-right">
        <a href="/admin/restaurant_delivered_order_list/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #33a1ff, #66c2ff)"
          >
            <div class="card-icon" style="background: rgba(51, 128, 204, 0.8)">
              <i class="fas fa-truck"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold">
                  Delivered Orders
                </h4>
              </div>
              <div
                class="card-body"
                id="deliveredOrders"
                value="<%= deliveredOrders %>"
                style="color: white; font-weight: bold"
              >
                <%= deliveredOrders %>
              </div>
            </div>
          </div>
        </a>
      </div>
      <!-- Cancel Order-->

      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-left">
        <a href="/admin/restaurant_cancel_order_list/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #ff5733, #ff8c66)"
          >
            <div class="card-icon" style="background: rgba(204, 85, 51, 0.8)">
              <i class="fas fa-ban"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold">
                  Cancelled Orders
                </h4>
              </div>
              <div
                class="card-body"
                id="cancelledOrders"
                value="<%= cancelledOrders %>"
                style="color: white; font-weight: bold"
              >
                <%= cancelledOrders %>
              </div>
            </div>
          </div>
        </a>
      </div>

      <!--Category -->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-left">
        <a href="/admin/restaurant_category/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #6666ff, #9999ff)"
          >
            <div class="card-icon" style="background: rgba(56, 56, 187, 0.8)">
              <i class="fas fa-users"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold"><b>Category</b></h4>
              </div>
              <div
                class="card-body"
                id="category"
                value="<%= category %>"
                style="color: white; font-weight: bold"
              >
                <%= category %>
              </div>
            </div>
          </div>
        </a>
      </div>

      <!-- Subcategory-->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-right">
        <a href="/admin/restaurant_subCategory/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #33cccc, #66cccc)"
          >
            <div class="card-icon" style="background: rgba(38, 152, 152, 0.8)">
              <i class="fas fa-utensils"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold">
                  <b>SubCategory</b>
                </h4>
              </div>
              <div
                class="card-body"
                id="subCategory"
                value="<%= subCategory %>"
                style="color: white; font-weight: bold"
              >
                <%= subCategory %>
              </div>
            </div>
          </div>
        </a>
      </div>

      <!-- Product -->
      <div class="col-lg-3 col-md-6 col-sm-6 col-12 animate-right">
        <a href="/admin/restaurant_product/<%= viewuser._id %>">
          <div
            class="card card-statistic-1"
            style="background: linear-gradient(135deg, #33cc99, #66cc99)"
          >
            <div class="card-icon" style="background: rgba(38, 151, 114, 0.8)">
              <i class="fas fa-taxi"></i>
            </div>
            <div class="card-wrap">
              <div class="card-header">
                <h4 style="color: white; font-weight: bold"><b>Products</b></h4>
              </div>
              <div
                class="card-body"
                id="products"
                value="<%= products %>"
                style="color: white; font-weight: bold"
              >
                <%= products %>
              </div>
            </div>
          </div>
        </a>
      </div>
    </div>
  </section>
  <div class="row">
    <!-- Graph for Users, Riders, and Restaurants -->
    <div class="col-lg-6">
      <div class="card">
        <div class="card-header">
          <h4>Category, SubCatgory, and Products</h4>
        </div>
        <div class="card-body">
          <canvas id="userGraph"></canvas>
        </div>
      </div>
    </div>

    <!-- Graph for Orders -->
    <div class="col-lg-6">
      <div class="card">
        <div class="card-header">
          <h4>Order Statistics</h4>
        </div>
        <div class="card-body">
          <canvas id="orderGraph"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const filterDropdown = document.getElementById("filter");

  // Initial data setup for graphs
  let categoryCount =
    parseInt(document.getElementById("category").textContent) || 0;
  let subCategoryCount =
    parseInt(document.getElementById("subCategory").textContent) || 0;
  let productCount =
    parseInt(document.getElementById("products").textContent) || 0;
  let pendingOrderCount =
    parseInt(document.getElementById("pendingOrders").textContent) || 0;
  let activeOrderCount =
    parseInt(document.getElementById("activeOrders").textContent) || 0;
  let deliveredOrderCount =
    parseInt(document.getElementById("deliveredOrders").textContent) || 0;
  let cancelledOrderCount =
    parseInt(document.getElementById("cancelledOrders").textContent) || 0;

  // Loader Element
  const loader = document.getElementById("loader");

  // Show loader
  function showLoader() {
    if (loader) loader.style.display = "block";
  }

  // Hide loader
  function hideLoader() {
    if (loader) loader.style.display = "none";
  }

  let userGraph, orderGraph;

  // Initialize Charts
  function initializeCharts() {
    const userGraphCtx = document.getElementById("userGraph").getContext("2d");
    const orderGraphCtx = document
      .getElementById("orderGraph")
      .getContext("2d");

    // User Graph setup
    userGraph = new Chart(userGraphCtx, {
      type: "bar",
      data: {
        labels: ["Category", "SubCategory", "Products"],
        datasets: [
          {
            label: "Count",
            data: [categoryCount, subCategoryCount, productCount], // Initial data
            backgroundColor: [
              "#6666ff", // Category (solid blue)
              "#33cccc", // SubCategory (solid cyan)
              "#33cc99", // Products (solid greenish)
            ],
            borderColor: [
              "#4444ff", // Category border (darker blue)
              "#33aaaa", // SubCategory border (darker cyan)
              "#33aa88", // Products border (darker greenish)
            ],
            borderWidth: 1,
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {
          legend: { display: false },
          title: { display: true, text: "Category, SubCategory, and Product" },
        },
      },
    });

    // Order Graph setup
    orderGraph = new Chart(orderGraphCtx, {
      type: "doughnut",
      data: {
        labels: [
          "Pending Orders",
          "Active Orders",
          "Delivered Orders",
          "Cancelled Orders",
        ],
        datasets: [
          {
            label: "Orders",
            data: [
              pendingOrderCount,
              activeOrderCount,
              deliveredOrderCount,
              cancelledOrderCount,
            ], // Initial data
            backgroundColor: [
              "#e68900", // Pending Orders (darker orange)
              "#ffc300", // Active Orders (red-orange)
              "#33a1ff", // Delivered Orders (light blue)
              "#ff5733", // Cancelled Orders (yellow)
            ],
            borderColor: [
              "#d39e00", // Pending Orders border (darker yellow)
              "#e1a700", // Active Orders border (darker red-orange)
              "#267bbf", // Delivered Orders border (darker blue)
              "#d14b17", // Cancelled Orders border (darker yellow)
            ],
            borderWidth: 1,
          },
        ],
      },
      options: {
        responsive: true,
        plugins: {
          legend: { position: "bottom" },
          title: { display: true, text: "Order Statistics" },
        },
      },
    });
  }

  // Fetch data and update charts
  async function fetchData(filter = null) {
    showLoader(); // Show loader before starting the fetch process

    try {
      const restaurantId =
        document.getElementById("restaurant_id").dataset.value;

      // Ensure filter value is passed correctly
      const selectedFilter = filter || filterDropdown.value;

      const response = await fetch("/admin/restaurantDashboardFilter", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ filter: selectedFilter, id: restaurantId }),
      });

      if (!response.ok) {
        throw new Error(`API returned status: ${response.status}`);
      }

      const data = await response.json();

      // Update text content
      document.getElementById("orders").textContent = data.orders;
      document.getElementById("pendingOrders").textContent = data.pendingOrders;
      document.getElementById("activeOrders").textContent = data.activeOrders;
      document.getElementById("deliveredOrders").textContent =
        data.deliveredOrders;
      document.getElementById("cancelledOrders").textContent =
        data.cancelledOrders;
      document.getElementById("category").textContent = data.category;
      document.getElementById("subCategory").textContent = data.subCategory;
      document.getElementById("products").textContent = data.products;

      // Update variables and charts
      categoryCount = data.category || 0;
      subCategoryCount = data.subCategory || 0;
      productCount = data.products || 0;
      pendingOrderCount = data.pendingOrders || 0;
      activeOrderCount = data.activeOrders || 0;
      deliveredOrderCount = data.deliveredOrders || 0;
      cancelledOrderCount = data.cancelledOrders || 0;

      // Update charts
      userGraph.data.datasets[0].data = [
        categoryCount,
        subCategoryCount,
        productCount,
      ];
      userGraph.update();

      orderGraph.data.datasets[0].data = [
        pendingOrderCount,
        activeOrderCount,
        deliveredOrderCount,
        cancelledOrderCount,
      ];
      orderGraph.update();
    } catch (error) {
      console.error("Error fetching data:", error);
    } finally {
      hideLoader(); // Always hide loader once fetch process is complete
    }
  }

  // Event listener for dropdown changes
  filterDropdown.addEventListener("change", async () => {
    await fetchData(); // Fetch and update data based on selected filter
  });

  // Initialize charts and set initial data on page load
  document.addEventListener("DOMContentLoaded", () => {
    initializeCharts(); // Initialize charts
    fetchData(); // Fetch initial data
  });
</script>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  socket.on("updateUserCount", (data) => {
    //   document.getElementById('user').textContent = data.user;
  });

  socket.on("updateDashboard", (dashboardData) => {});
</script>
