<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      content="width=device-width, initial-scale=1, maximum-scale=1, shrink-to-fit=no"
      name="viewport"
    />
    <title>CaryYou &mdash; Login</title>
    <link rel="icon" type="image/x-icon" href="../assets/img/logo.png" />

    <!-- General CSS Files -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://use.fontawesome.com/releases/v5.7.2/css/all.css"
      integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr"
      crossorigin="anonymous"
    />
    
    <!-- Toastr CSS (for the toaster alerts) -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css"
    />

    <style>
      body {
        margin: 0;
        height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: "Arial", sans-serif;
        background: url("https://img.freepik.com/premium-photo/restaurant-blur-background-design-resource_236836-16729.jpg?w=740");
        background-repeat: no-repeat;
        background-size: cover;
        background-position: center;
        overflow: hidden;
      }

      .login-container {
        position: absolute;
        left: 0;
        width: 45%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      .login-box {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border-radius: 20px;
        padding: 30px;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
      }

      .login-brand {
        text-align: center;
        margin-bottom: 20px;
      }

      .login-brand img {
        width: 70px;
        height: 70px;
        border-radius: 50%;
      }

      .card-header {
        text-align: center;
        font-size: 24px;
        font-weight: bold;
        color: #fff;
        border: none;
        background: none;
      }

      .card-body {
        background: none;
        color: #e0e0e0;
      }

      .form-group label {
        font-size: 14px;
        font-weight: bold;
        color: #bbb;
      }

      .form-control {
        background: rgba(255, 255, 255, 0.1);
        border: none;
        border-radius: 25px;
        padding: 10px 15px;
        color: #fff;
        box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.2);
      }

      .form-control:focus {
        outline: none;
        background: rgba(255, 255, 255, 0.2);
        box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
      }

      .btn {
        border-radius: 25px;
        padding: 10px;
        font-weight: bold;
        color: #fff;
      }

      .btn-info {
        background: linear-gradient(135deg, #ffafbd, #ffc3a0);
        border: none;
        width: 100%;
        max-width: 250px;
        margin: 0 auto;
        display: block;
      }

      .btn-info:hover {
        background: linear-gradient(135deg, #ffc3a0, #ffafbd);
        transform: scale(1.05);
        transition: all 0.3s ease-in-out;
      }

      .footer-left {
        text-align: center;
        margin-top: 10px;
        font-size: 14px;
        color: #999;
      }

      .footer-left a {
        color: #ff6f61;
        text-decoration: none;
      }

      .animation-container {
        position: absolute;
        top: 0;
        right: 0;
        width: 55%;
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
      }

      .caryYou {
        font-size: 80px;
        font-weight: bold;
        color: #ff6f61;
        letter-spacing: 10px;
        opacity: 0;
        animation: slideUp 2s forwards;
      }

      .slogan {
        font-size: 35px;
        font-weight: normal;
        color: #ccc;
        margin-top: 20px;
        opacity: 0;
        animation: slideDown 2s forwards;
        animation-delay: 0.5s;
      }

      @keyframes slideUp {
        from {
          transform: translateY(100%);
          opacity: 0;
        }
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }

      @keyframes slideDown {
        from {
          transform: translateY(-100%);
          opacity: 0;
        }
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }
    </style>
  </head>

  <body>
    <div class="login-container">
      <div class="login-box">
        <div class="login-brand">
          <img src="/assets/img/logo.png" alt="Logo" />
        </div>
        <div class="card card-primary shadow-none overflow-hidden">
          <div class="card-header">Sign in</div>
          <div class="card-body">
            <form method="POST" id="loginForm" action="/admin/login">
              <div class="form-group">
                <label for="email">Email</label>
                <input
                  id="email"
                  type="email"
                  class="form-control"
                  name="email"
                  required
                  autofocus
                />
              </div>
              <div class="form-group">
                <label>Password</label>
                <input
                  id="password"
                  type="password"
                  class="form-control"
                  name="password"
                  required
                />
              </div>
              <br />
              <input
                type="hidden"
                name="deviceToken"
                id="deviceToken"
                value=""
              />
              <div class="form-group text-center">
                <button type="submit" class="btn btn-info btn-lg">Login</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <div class="animation-container">
      <div class="caryYou">CaryYou</div>
      <div class="slogan">Your Needs, Delivered with Ease!</div>
    </div>

    <!-- Toastr JS (for toaster alerts) -->
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"
    ></script>

    <script>
      // Toastr options
      toastr.options = {
        "closeButton": true,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "timeOut": "3000",
        "extendedTimeOut": "1000",
        "showMethod": "slideDown",
        "hideMethod": "slideUp"
      };

      // Function to show toastr message
      function showToast(message, type) {
        if (type === "success") {
          toastr.success(message);
        } else if (type === "error") {
          toastr.error(message);
        }
      }

      // Submit the form using AJAX
      $("#loginForm").submit(function(event) {
        event.preventDefault(); // Prevent actual form submission for AJAX
        
        const email = $("#email").val();
        const password = $("#password").val();
        const deviceToken = $("#deviceToken").val();

        // Make the API call
        $.ajax({
          url: "/admin/login",  // Adjust the API endpoint
          method: "POST",
          data: {
            email: email,
            password: password,
            deviceToken: deviceToken
          },
          success: function(response) {
            if (response.success) {
              // Show success toast and redirect
              showToast("Login Successful!", "success");
              setTimeout(function() {
                window.location.href = "/admin/dashboard"; // Adjust URL as needed
              }, 1000);
            } else {
              // Show error toast
              showToast(response.message, "error");
            }
          },
          error: function(xhr, status, error) {
            // Handle API error
            showToast("Invalid email or password. Please try again.", "error");
          }
        });
      });
    </script>
  </body>
</html>


<script src="https://www.gstatic.com/firebasejs/7.16.1/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/7.16.1/firebase-messaging.js"></script>
<script>
  // Check if Service Workers are supported
  if ("serviceWorker" in navigator) {
    window.addEventListener("load", () => {
      navigator.serviceWorker
        .register("/firebase-messaging-sw.js")
        .then((registration) => {
          console.log("Service Worker registered successfully:", registration);
          // Pass registration to Firebase Messaging
          messaging.useServiceWorker(registration);
        })
        .catch((error) => {
          console.error("Service Worker registration failed:", error);
        });
    });
  } else {
    console.error("Service Workers are not supported in this browser.");
  }

  // Firebase Configuration
  const firebaseConfig = {
    apiKey: "AIzaSyC_4Bx0RchfzAdkpVYwv0pZFIIrswy82vs",
    authDomain: "caryyou-b45f5.firebaseapp.com",
    projectId: "caryyou-b45f5",
    storageBucket: "caryyou-b45f5.firebasestorage.app",
    messagingSenderId: "683558202016",
    appId: "1:683558202016:web:8e30f1c19fcfd49846f7c5",
    measurementId: "G-8XGFLN1313",
  };
  firebase.initializeApp(firebaseConfig);
  const messaging = firebase.messaging();

  // Request Notification Permission
  function requestNotificationPermission() {
    return Notification.requestPermission().then((permission) => {
      if (permission === "granted") {
        console.log("Notification permission granted.");
        return messaging.getToken();
      } else {
        console.error("Notification permission denied.");
        throw new Error("Notification permission not granted.");
      }
    });
  }

  // Check and request permission
  if (
    Notification.permission === "default" ||
    Notification.permission === "denied"
  ) {
    requestNotificationPermission()
      .then((token) => {
        console.log("Firebase Token:", token);
        document.getElementById("deviceToken").value = token;
      })
      .catch((err) => {
        console.error("Error getting permission:", err);
      });
  } else if (Notification.permission === "granted") {
    messaging.getToken().then((token) => {
      console.log("Firebase Token:", token);
      document.getElementById("deviceToken").value = token;
    });
  }

  // Handle incoming messages
  let enableForegroundNotification = true;
  messaging.onMessage((payload) => {
    if (enableForegroundNotification) {
      const { title, body, icon } = payload.data;
      const options = {
        body,
        icon: icon || "../../assets/images/ch2.png",
        data: payload.data,
      };
      navigator.serviceWorker.getRegistrations().then((registrations) => {
        if (registrations.length > 0) {
          registrations[0].showNotification(title, options);
        } else {
          console.error("No service worker registration found.");
        }
      });
    }
  });
</script>
